{
  "openapi": "3.0.0",
  "info": {
    "title": "Sophos Unified API",
    "version": "1.0.0"
  },
  "paths": {
    "/health-check": {
      "get": {
        "summary": "Get health",
        "description": "Get health.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "checks",
            "in": "query",
            "description": "Type of health check",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "protection",
                  "policy",
                  "exclusions",
                  "tamperProtection"
                ]
              }
            },
            "example": [
              "protection",
              "exclusions"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Found Account Health check",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Account Health check"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "get_health-check"
      }
    },
    "/scores/historical": {
      "get": {
        "summary": "Get historical health scores",
        "description": "Get historical health scores.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date (the range between startDate and endDate is inclusive)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2022-12-25"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date (the range between startDate and endDate is inclusive)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2022-12-25"
          }
        ],
        "responses": {
          "200": {
            "description": "Historical health scores",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "get_scores_historical"
      }
    },
    "/scores/regional": {
      "get": {
        "summary": "Get health score for comparison to other organizations in your region",
        "description": "Get health score for comparison to other organizations in your region.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account Health Check scores by region",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "bands": {
                      "type": "array",
                      "description": "List of bands",
                      "items": {
                        "type": "object",
                        "description": "Score Band",
                        "properties": {
                          "lowerBound": {
                            "type": "integer",
                            "description": "Lower tenant size bound"
                          },
                          "upperBound": {
                            "type": "integer",
                            "description": "Upper tenant size bound"
                          }
                        }
                      },
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "get_scores_regional"
      }
    },
    "/snooze": {
      "post": {
        "summary": "Snooze reminders for account health issues for a customer",
        "description": "Snooze reminders for account health issues for a customer.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Snooze request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "endpoint": {
                    "type": "object",
                    "description": "Snooze request"
                  },
                  "policy": {
                    "type": "object",
                    "description": "Configure snooze request",
                    "properties": {
                      "computer": {
                        "type": "array",
                        "description": "Policy types to snooze",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "post_snooze"
      }
    },
    "/queries": {
      "get": {
        "summary": "Get queries matching the given filters",
        "description": "Get queries matching the given filters",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "categoryId",
            "in": "query",
            "description": "Category ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search for items that match the given terms",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchFields",
            "in": "query",
            "description": "Search only within the specified fields",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The size of the page requested",
            "schema": {
              "type": "integer",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to fetch, starting with 1",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "pageTotal",
            "in": "query",
            "description": "Whether the number of pages should be calculated and returned in the response",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in a partial response",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of queries",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Query ID"
                          },
                          "name": {
                            "type": "string",
                            "description": "Query name"
                          },
                          "code": {
                            "type": "string",
                            "description": "Identifier for query name. This is available only for pre-defined queries"
                          },
                          "description": {
                            "type": "string",
                            "description": "Query description"
                          },
                          "template": {
                            "type": "string",
                            "description": "SQL statement for a query. This can contain replacement variables wrapped in $$ (double dollar sign) delimiters"
                          },
                          "variables": {
                            "type": "array",
                            "description": "Variables embedded in the value of template",
                            "items": {
                              "type": "object",
                              "description": "Query variable"
                            }
                          },
                          "supportedOSes": {
                            "type": "array",
                            "description": "Supported endpoint operating systems",
                            "items": {
                              "type": "string"
                            }
                          },
                          "categories": {
                            "type": "array",
                            "description": "Categories the query belongs to",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "template",
                          "variables",
                          "supportedOSes",
                          "categories"
                        ]
                      }
                    }
                  },
                  "required": [
                    "items"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_queries"
      }
    },
    "/queries/{queryId}": {
      "get": {
        "summary": "Get details of a specific query",
        "description": "Get details of a specific query by ID",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "queryId",
            "in": "path",
            "description": "Query ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Query details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Query ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "Query name"
                    },
                    "code": {
                      "type": "string",
                      "description": "Identifier for query name. This is available only for pre-defined queries"
                    },
                    "description": {
                      "type": "string",
                      "description": "Query description"
                    },
                    "template": {
                      "type": "string",
                      "description": "SQL statement for a query. This can contain replacement variables wrapped in $$ (double dollar sign) delimiters"
                    },
                    "variables": {
                      "type": "array",
                      "description": "Variables embedded in the value of template",
                      "items": {
                        "type": "object",
                        "description": "Query variable"
                      }
                    },
                    "supportedOSes": {
                      "type": "array",
                      "description": "Supported endpoint operating systems",
                      "items": {
                        "type": "string"
                      }
                    },
                    "categories": {
                      "type": "array",
                      "description": "Categories the query belongs to",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "template",
                    "variables",
                    "supportedOSes",
                    "categories"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_queries_queryId"
      }
    },
    "/categories": {
      "get": {
        "summary": "Get available categories",
        "description": "Get available categories for queries",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Category ID"
                          },
                          "name": {
                            "type": "string",
                            "description": "Category name"
                          }
                        },
                        "required": [
                          "id",
                          "name"
                        ]
                      }
                    }
                  },
                  "required": [
                    "items"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_categories"
      }
    },
    "/categories/{categoryId}": {
      "get": {
        "summary": "Get details of a specific category",
        "description": "Get details of a specific category by ID",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "categoryId",
            "in": "path",
            "description": "Category ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Category ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "Category name"
                    }
                  },
                  "required": [
                    "id",
                    "name"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_categories_categoryId"
      }
    },
    "/runs": {
      "get": {
        "summary": "Get query runs",
        "description": "Get query runs matching the given filters",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The size of the page requested",
            "schema": {
              "type": "integer",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to fetch, starting with 1",
            "schema": {
              "type": "integer",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of query runs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Run ID"
                          },
                          "queryId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Query ID"
                          },
                          "status": {
                            "type": "string",
                            "description": "Run status",
                            "enum": [
                              "running",
                              "completed",
                              "failed"
                            ]
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Creation timestamp"
                          }
                        },
                        "required": [
                          "id",
                          "queryId",
                          "status",
                          "createdAt"
                        ]
                      }
                    }
                  },
                  "required": [
                    "items"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_runs"
      },
      "post": {
        "summary": "Create a new query run",
        "description": "Create a new query run for the specified query",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "queryId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Query ID"
                  },
                  "variableValues": {
                    "type": "object",
                    "description": "Values for query variables",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "endpointIds": {
                    "type": "array",
                    "description": "List of endpoint IDs to run the query on",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                },
                "required": [
                  "queryId",
                  "endpointIds"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Query run created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Run ID"
                    },
                    "queryId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Query ID"
                    },
                    "status": {
                      "type": "string",
                      "description": "Run status",
                      "enum": [
                        "running"
                      ]
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Creation timestamp"
                    }
                  },
                  "required": [
                    "id",
                    "queryId",
                    "status",
                    "createdAt"
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_runs"
      }
    },
    "/runs/{runId}": {
      "get": {
        "summary": "Get details of a specific run",
        "description": "Get details of a specific query run by ID",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "runId",
            "in": "path",
            "description": "Run ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Run details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Run ID"
                    },
                    "queryId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Query ID"
                    },
                    "status": {
                      "type": "string",
                      "description": "Run status",
                      "enum": [
                        "running",
                        "completed",
                        "failed"
                      ]
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Creation timestamp"
                    },
                    "completedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Completion timestamp"
                    },
                    "results": {
                      "type": "array",
                      "description": "Query results",
                      "items": {
                        "type": "object",
                        "properties": {
                          "endpointId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Endpoint ID"
                          },
                          "status": {
                            "type": "string",
                            "description": "Result status",
                            "enum": [
                              "success",
                              "error"
                            ]
                          },
                          "data": {
                            "type": "array",
                            "description": "Result data rows",
                            "items": {
                              "type": "object",
                              "additionalProperties": true
                            }
                          },
                          "error": {
                            "type": "string",
                            "description": "Error message if status is error"
                          }
                        },
                        "required": [
                          "endpointId",
                          "status"
                        ]
                      }
                    }
                  },
                  "required": [
                    "id",
                    "queryId",
                    "status",
                    "createdAt"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_runs_runId"
      }
    },
    "/runs/{runId}/results": {
      "get": {
        "summary": "Get run results",
        "description": "Get the results of a query run.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "runId",
            "in": "path",
            "description": "Run ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Results of the requested run",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunResults"
                }
              }
            }
          }
        },
        "operationId": "get_runs_runId_results"
      }
    },
    "/settings/mac-filtering": {
      "get": {
        "summary": "Get MAC filter settings for the tenant",
        "description": "Get MAC filter settings for the tenant.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "MAC filter settings retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "macAddresses": {
                      "type": "array",
                      "description": "List of MAC addresses.",
                      "items": {
                        "type": "string",
                        "pattern": "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$",
                        "example": "5c:85:7e:32:97:26"
                      }
                    },
                    "tenant": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "3e382b8e-49fd-4cd9-8360-a364371d7650"
                        }
                      }
                    },
                    "createdBy": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "97483e58-55d7-44fb-b03f-9422f106ef66"
                        },
                        "type": {
                          "type": "string",
                          "example": "user"
                        },
                        "accountId": {
                          "type": "string",
                          "format": "uuid",
                          "example": "3e382b8e-49fd-4cd9-8360-a364371d7650"
                        },
                        "accountType": {
                          "type": "string",
                          "example": "tenant"
                        }
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2022-03-30T05:43:59.492"
                    }
                  },
                  "required": [
                    "macAddresses"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_settings_mac-filtering"
      },
      "put": {
        "summary": "Update MAC filter settings for the tenant",
        "description": "Update MAC filter settings for the tenant.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Update MAC filter settings for the tenant.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Block or unblock devices connected to the switch by their MAC addresses.",
                "properties": {
                  "macAddresses": {
                    "type": "array",
                    "description": "List of MAC addresses.",
                    "items": {
                      "type": "string",
                      "pattern": "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$",
                      "example": "5c:85:7e:32:97:26"
                    },
                    "maxItems": 256,
                    "uniqueItems": true
                  }
                },
                "required": [
                  "macAddresses"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "MAC filter settings updated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "macAddresses": {
                      "type": "array",
                      "description": "List of MAC addresses.",
                      "items": {
                        "type": "string",
                        "pattern": "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$",
                        "example": "5c:85:7e:32:97:26"
                      }
                    }
                  },
                  "required": [
                    "macAddresses"
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_settings_mac-filtering"
      }
    },
    "/tasks": {
      "get": {
        "summary": "Get task details for the tenant",
        "description": "Get task details for the tenant.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to fetch, starting with 1.",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "pageTotal",
            "in": "query",
            "description": "Whether the number of pages should be calculated and returned in the response.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The size of the page requested.",
            "schema": {
              "type": "integer",
              "default": 100,
              "minimum": 1,
              "maximum": 500
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type of the policy to filter the tasks.",
            "schema": {
              "type": "string",
              "enum": [
                "switches"
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Fields to include in the response.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "200": {
            "description": "Task details retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "description": "List of tasks.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for the task."
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the task.",
                            "example": "switches"
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of the task.",
                            "enum": [
                              "pending",
                              "in_progress",
                              "completed",
                              "failed"
                            ]
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Timestamp when the task was created."
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Timestamp when the task was last updated."
                          },
                          "details": {
                            "type": "object",
                            "description": "Additional details about the task."
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "status",
                          "createdAt"
                        ]
                      }
                    },
                    "pages": {
                      "type": "object",
                      "description": "Pagination information.",
                      "properties": {
                        "current": {
                          "type": "integer",
                          "description": "Current page number."
                        },
                        "size": {
                          "type": "integer",
                          "description": "Page size."
                        },
                        "total": {
                          "type": "integer",
                          "description": "Total number of pages."
                        },
                        "items": {
                          "type": "integer",
                          "description": "Total number of items."
                        }
                      },
                      "required": [
                        "current",
                        "size"
                      ]
                    }
                  },
                  "required": [
                    "items",
                    "pages"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_tasks"
      }
    },
    "/": {
      "get": {
        "summary": "Returns information about the caller",
        "description": "Returns information about the caller based on their auth token.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Information about the caller.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "ID of the caller."
                    },
                    "idType": {
                      "type": "string",
                      "description": "The type of the ID of the caller.",
                      "enum": [
                        "partner",
                        "organization",
                        "tenant"
                      ]
                    },
                    "apiHosts": {
                      "type": "object",
                      "description": "API hosts that are available to the caller.",
                      "properties": {
                        "global": {
                          "type": "string",
                          "format": "uri",
                          "description": "Global API host."
                        },
                        "dataRegion": {
                          "type": "string",
                          "format": "uri",
                          "description": "Data region specific API host."
                        }
                      },
                      "required": [
                        "global",
                        "dataRegion"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "idType",
                    "apiHosts"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_"
      }
    },
    "/attestations": {
      "post": {
        "summary": "Create a new attestation for the given user",
        "description": "Create a new attestation for the given user.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in a partial response.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "requestBody": {
          "description": "New attestation request.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "ID of the user to verify activity for",
                    "example": "57e7f67f-6c1a-4580-a031-65f38a229732"
                  },
                  "title": {
                    "type": "object",
                    "properties": {
                      "text": {
                        "type": "string",
                        "description": "Title text of the attestation",
                        "example": "Security question"
                      },
                      "translations": {
                        "type": "object",
                        "description": "Translations of the title text",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "example": {
                          "de": "Sicherheitsfrage"
                        }
                      }
                    },
                    "required": [
                      "text"
                    ]
                  },
                  "question": {
                    "type": "object",
                    "properties": {
                      "text": {
                        "type": "string",
                        "description": "Question text of the attestation",
                        "example": "Did you sign in to your account recently?"
                      },
                      "translations": {
                        "type": "object",
                        "description": "Translations of the question text",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "example": {
                          "de": "Wann haben Sie sich das letzte Mal an Ihrem Benutzerkonto angemeldet?"
                        }
                      }
                    },
                    "required": [
                      "text"
                    ]
                  },
                  "options": {
                    "type": "array",
                    "description": "Answer options for the attestation",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "Unique key for the option",
                          "example": "today"
                        },
                        "value": {
                          "type": "object",
                          "properties": {
                            "text": {
                              "type": "string",
                              "description": "Text of the option",
                              "example": "Today"
                            },
                            "translations": {
                              "type": "object",
                              "description": "Translations of the option text",
                              "additionalProperties": {
                                "type": "string"
                              },
                              "example": {
                                "de": "Heute"
                              }
                            }
                          },
                          "required": [
                            "text"
                          ]
                        }
                      },
                      "required": [
                        "key",
                        "value"
                      ]
                    }
                  },
                  "timeout": {
                    "type": "integer",
                    "description": "Timeout in seconds for the attestation",
                    "default": 600,
                    "example": 300
                  }
                },
                "required": [
                  "userId",
                  "title",
                  "question"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Attestation created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique identifier for the attestation"
                    },
                    "userId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "ID of the user to verify activity for"
                    },
                    "title": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "string",
                          "description": "Title text of the attestation"
                        },
                        "translations": {
                          "type": "object",
                          "description": "Translations of the title text",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "question": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "string",
                          "description": "Question text of the attestation"
                        },
                        "translations": {
                          "type": "object",
                          "description": "Translations of the question text",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "options": {
                      "type": "array",
                      "description": "Answer options for the attestation",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "Unique key for the option"
                          },
                          "value": {
                            "type": "object",
                            "properties": {
                              "text": {
                                "type": "string",
                                "description": "Text of the option"
                              },
                              "translations": {
                                "type": "object",
                                "description": "Translations of the option text",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the attestation",
                      "enum": [
                        "pending",
                        "answered",
                        "expired"
                      ]
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the attestation was created"
                    },
                    "expiresAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the attestation will expire"
                    }
                  },
                  "required": [
                    "id",
                    "userId",
                    "title",
                    "question",
                    "status",
                    "createdAt",
                    "expiresAt"
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_attestations"
      }
    },
    "/attestations/{attestationId}": {
      "get": {
        "summary": "Get an attestation by ID",
        "description": "Get an attestation by ID.",
        "parameters": [
          {
            "name": "attestationId",
            "in": "path",
            "description": "Attestation ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in a partial response.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "200": {
            "description": "Attestation object for given attestation ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique identifier for the attestation"
                    },
                    "userId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "ID of the user to verify activity for"
                    },
                    "title": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "string",
                          "description": "Title text of the attestation"
                        },
                        "translations": {
                          "type": "object",
                          "description": "Translations of the title text",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "question": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "string",
                          "description": "Question text of the attestation"
                        },
                        "translations": {
                          "type": "object",
                          "description": "Translations of the question text",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "options": {
                      "type": "array",
                      "description": "Answer options for the attestation",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "Unique key for the option"
                          },
                          "value": {
                            "type": "object",
                            "properties": {
                              "text": {
                                "type": "string",
                                "description": "Text of the option"
                              },
                              "translations": {
                                "type": "object",
                                "description": "Translations of the option text",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the attestation",
                      "enum": [
                        "pending",
                        "answered",
                        "expired"
                      ]
                    },
                    "answer": {
                      "type": "string",
                      "description": "The key of the selected answer option, if the attestation has been answered"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the attestation was created"
                    },
                    "answeredAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the attestation was answered, if applicable"
                    },
                    "expiresAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the attestation will expire"
                    }
                  },
                  "required": [
                    "id",
                    "userId",
                    "title",
                    "question",
                    "status",
                    "createdAt",
                    "expiresAt"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_attestations_attestationId"
      }
    },
    "/alerts": {
      "get": {
        "summary": "List alerts",
        "description": "List alerts.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of alerts"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "get_alerts"
      }
    },
    "/events": {
      "get": {
        "summary": "Get events with timestamps within last 24 hours",
        "description": "Get events with timestamps within last 24 hours.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "The tenant ID. Required when using Bearer Token based authentication.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return, default is 200, max is 1000.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 200,
              "minimum": 200,
              "maximum": 1000
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Identifier for next item in the list, this value is available in response as next_cursor. Response will default to last 24 hours if cursor is not within last 24 hours.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from_date",
            "in": "query",
            "description": "The starting date from which events will be retrieved defined as Unix timestamp in UTC. Ignored if cursor is set. Must be within last 24 hours.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "exclude_types",
            "in": "query",
            "description": "The String of list of types of events to be excluded.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succeeded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "has_more": {
                      "type": "boolean",
                      "description": "Indicates if there are more items to retrieve"
                    },
                    "items": {
                      "type": "array",
                      "description": "List of event items",
                      "items": {
                        "type": "object",
                        "description": "This model wraps up an Event. This contains various fields that contain information regarding the event that was generated.",
                        "properties": {
                          "created_at": {
                            "type": "string",
                            "description": "The date at which the event was created."
                          },
                          "customer_id": {
                            "type": "string",
                            "description": "The unique identifier of the customer linked with this record."
                          },
                          "endpoint_id": {
                            "type": "string",
                            "description": "Identifier of the endpoint associated with the event"
                          },
                          "endpoint_type": {
                            "type": "string",
                            "description": "Type of endpoint"
                          },
                          "id": {
                            "type": "string",
                            "description": "Unique identifier for the event"
                          },
                          "location": {
                            "type": "string",
                            "description": "Location information"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the event"
                          },
                          "source": {
                            "type": "string",
                            "description": "Source of the event"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the event"
                          },
                          "when": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Timestamp when the event occurred"
                          },
                          "data": {
                            "type": "object",
                            "description": "Event data object",
                            "properties": {
                              "*": {
                                "type": "object",
                                "description": "Dynamic properties based on event type"
                              }
                            }
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "customer_id",
                          "type"
                        ]
                      }
                    },
                    "next_cursor": {
                      "type": "string",
                      "description": "Cursor for the next set of results"
                    }
                  },
                  "required": [
                    "items"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_events"
      }
    },
    "/admins": {
      "get": {
        "summary": "List all tenant admins",
        "description": "List all tenant admins.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Defines how to sort the data",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^([^:]+)(:(asc|desc))?$"
              }
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in a partial response",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search for items that match the given terms",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchFields",
            "in": "query",
            "description": "Admin fields applicable for search",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "username"
                ]
              }
            }
          },
          {
            "name": "roleId",
            "in": "query",
            "description": "Filter by role ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number to fetch",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "pageTotal",
            "in": "query",
            "description": "Include total count in response",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page requested",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of tenant admins"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "get_admins"
      },
      "post": {
        "summary": "Create a tenant admin from a directory user",
        "description": "Create a tenant admin from a directory user.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in a partial response",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "New admin creation request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "User ID from directory"
                  },
                  "roleAssignments": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "roleId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Role ID to assign"
                        }
                      },
                      "required": [
                        "roleId"
                      ]
                    }
                  }
                },
                "required": [
                  "userId",
                  "roleAssignments"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Admin created successfully"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "post_admins"
      }
    },
    "/admins/{adminId}": {
      "get": {
        "summary": "Get tenant admin details by ID",
        "description": "Get tenant admin details by ID.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "adminId",
            "in": "path",
            "description": "Admin ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in a partial response",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of the requested tenant admin"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "get_admins_adminId"
      },
      "patch": {
        "summary": "Update a partner admin",
        "description": "Update a partner admin.",
        "parameters": [
          {
            "name": "X-Partner-ID",
            "in": "header",
            "description": "Partner ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "adminId",
            "in": "path",
            "description": "Admin ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "description": "First name"
                  },
                  "lastName": {
                    "type": "string",
                    "description": "Last name"
                  },
                  "roleId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Role ID"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "ACTIVE",
                      "SUSPENDED"
                    ],
                    "description": "Admin status"
                  },
                  "tenantAccess": {
                    "type": "array",
                    "description": "List of tenants the admin has access to",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Admin updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Admin ID"
                    },
                    "firstName": {
                      "type": "string",
                      "description": "First name"
                    },
                    "lastName": {
                      "type": "string",
                      "description": "Last name"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "description": "Email address"
                    },
                    "roleId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Role ID"
                    },
                    "roleName": {
                      "type": "string",
                      "description": "Role name"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "ACTIVE",
                        "SUSPENDED",
                        "INVITED"
                      ],
                      "description": "Admin status"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Last update timestamp"
                    }
                  },
                  "required": [
                    "id",
                    "email",
                    "roleId",
                    "status",
                    "updatedAt"
                  ]
                }
              }
            }
          }
        },
        "operationId": "patch_admins_adminId"
      },
      "delete": {
        "summary": "Remove an admin by ID",
        "description": "Remove an admin by ID.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "adminId",
            "in": "path",
            "description": "Admin ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested admin already removed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "deleted": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "delete_admins_adminId"
      }
    },
    "/billing/usage/{year}/{month}": {
      "get": {
        "summary": "Get billing usage for a specific month",
        "description": "Get billing usage for a specific month.",
        "parameters": [
          {
            "name": "X-Partner-ID",
            "in": "header",
            "description": "Partner ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "year",
            "in": "path",
            "description": "Year (YYYY)",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}$"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "Month (MM)",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d{2}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Billing usage report",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "year": {
                      "type": "string",
                      "description": "Year (YYYY)"
                    },
                    "month": {
                      "type": "string",
                      "description": "Month (MM)"
                    },
                    "tenants": {
                      "type": "array",
                      "description": "List of tenant usage",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Tenant ID"
                          },
                          "name": {
                            "type": "string",
                            "description": "Tenant name"
                          },
                          "products": {
                            "type": "array",
                            "description": "List of product usage",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Product name"
                                },
                                "quantity": {
                                  "type": "integer",
                                  "description": "Quantity used"
                                },
                                "unit": {
                                  "type": "string",
                                  "description": "Unit of measurement"
                                }
                              },
                              "required": [
                                "name",
                                "quantity",
                                "unit"
                              ]
                            }
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "products"
                        ]
                      }
                    }
                  },
                  "required": [
                    "year",
                    "month",
                    "tenants"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_billing_usage_year_month"
      }
    },
    "/roles": {
      "get": {
        "summary": "List roles",
        "description": "List roles.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of roles"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "get_roles"
      },
      "post": {
        "summary": "Create a new role",
        "description": "Create a new role.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "New role creation request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Role name"
                  },
                  "permissions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of permissions for the role"
                  }
                },
                "required": [
                  "name",
                  "permissions"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Role created successfully"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "post_roles"
      }
    },
    "/roles/{roleId}": {
      "get": {
        "summary": "Get a specific role",
        "description": "Get a specific role by ID.",
        "parameters": [
          {
            "name": "X-Partner-ID",
            "in": "header",
            "description": "Partner ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "Role ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Role ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "Role name"
                    },
                    "description": {
                      "type": "string",
                      "description": "Role description"
                    },
                    "permissions": {
                      "type": "array",
                      "description": "List of permissions",
                      "items": {
                        "type": "string"
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Creation timestamp"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Last update timestamp"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "permissions",
                    "createdAt"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_roles_roleId"
      },
      "patch": {
        "summary": "Update a role",
        "description": "Update a role.",
        "parameters": [
          {
            "name": "X-Partner-ID",
            "in": "header",
            "description": "Partner ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "Role ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Role name"
                  },
                  "description": {
                    "type": "string",
                    "description": "Role description"
                  },
                  "permissions": {
                    "type": "array",
                    "description": "List of permissions",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Role updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Role ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "Role name"
                    },
                    "description": {
                      "type": "string",
                      "description": "Role description"
                    },
                    "permissions": {
                      "type": "array",
                      "description": "List of permissions",
                      "items": {
                        "type": "string"
                      }
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Last update timestamp"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "permissions",
                    "updatedAt"
                  ]
                }
              }
            }
          }
        },
        "operationId": "patch_roles_roleId"
      },
      "delete": {
        "summary": "Delete a role",
        "description": "Delete a role.",
        "parameters": [
          {
            "name": "X-Partner-ID",
            "in": "header",
            "description": "Partner ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "Role ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Role deleted"
          }
        },
        "operationId": "delete_roles_roleId"
      }
    },
    "/tenants": {
      "get": {
        "summary": "Get all the tenants in the specified organization",
        "description": "Get all the tenants in the specified organization.",
        "parameters": [
          {
            "name": "X-Organization-ID",
            "in": "header",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to fetch, starting with 1",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The size of the page requested",
            "schema": {
              "type": "integer",
              "default": 50
            }
          },
          {
            "name": "pageTotal",
            "in": "query",
            "description": "Whether the number of pages should be calculated and returned in the response",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Page of tenants",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "description": "List of tenants",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Tenant ID"
                          },
                          "showAs": {
                            "type": "string",
                            "description": "Tenant display name"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name set when the tenant was created"
                          },
                          "dataGeography": {
                            "type": "string",
                            "description": "Geographical location where the tenant data is stored",
                            "enum": [
                              "US",
                              "IE",
                              "DE"
                            ]
                          },
                          "billingType": {
                            "type": "string",
                            "description": "Billing type for the tenant",
                            "enum": [
                              "DIRECT",
                              "MSP",
                              "TRIAL"
                            ]
                          },
                          "partner": {
                            "type": "object",
                            "description": "Partner information if the tenant is managed by a partner",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Partner ID"
                              },
                              "name": {
                                "type": "string",
                                "description": "Partner name"
                              }
                            }
                          },
                          "apiHost": {
                            "type": "string",
                            "format": "uri",
                            "description": "API host for the tenant"
                          },
                          "status": {
                            "type": "string",
                            "description": "Tenant status",
                            "enum": [
                              "ACTIVE",
                              "SUSPENDED",
                              "DELETED"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "dataGeography"
                        ]
                      }
                    },
                    "pages": {
                      "type": "object",
                      "properties": {
                        "current": {
                          "type": "integer",
                          "description": "Current page number"
                        },
                        "size": {
                          "type": "integer",
                          "description": "Page size"
                        },
                        "total": {
                          "type": "integer",
                          "description": "Total number of pages"
                        }
                      },
                      "required": [
                        "current",
                        "size"
                      ]
                    }
                  },
                  "required": [
                    "items"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_tenants"
      },
      "post": {
        "summary": "Create a new tenant",
        "description": "Create a new tenant.",
        "parameters": [
          {
            "name": "X-Partner-ID",
            "in": "header",
            "description": "Partner ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Tenant name"
                  },
                  "dataGeography": {
                    "type": "string",
                    "description": "Geographical location where the tenant data is stored",
                    "enum": [
                      "US",
                      "IE",
                      "DE"
                    ]
                  },
                  "adminEmail": {
                    "type": "string",
                    "format": "email",
                    "description": "Email address for the tenant admin"
                  },
                  "adminFirstName": {
                    "type": "string",
                    "description": "First name for the tenant admin"
                  },
                  "adminLastName": {
                    "type": "string",
                    "description": "Last name for the tenant admin"
                  },
                  "products": {
                    "type": "array",
                    "description": "List of products to enable for the tenant",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "name",
                  "dataGeography",
                  "adminEmail"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tenant created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Tenant ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "Tenant name"
                    },
                    "dataGeography": {
                      "type": "string",
                      "description": "Geographical location where the tenant data is stored",
                      "enum": [
                        "US",
                        "IE",
                        "DE"
                      ]
                    },
                    "billingType": {
                      "type": "string",
                      "description": "Billing type for the tenant",
                      "enum": [
                        "MSP"
                      ]
                    },
                    "apiHost": {
                      "type": "string",
                      "format": "uri",
                      "description": "API host for the tenant"
                    },
                    "status": {
                      "type": "string",
                      "description": "Tenant status",
                      "enum": [
                        "ACTIVE"
                      ]
                    },
                    "products": {
                      "type": "array",
                      "description": "List of products enabled for the tenant",
                      "items": {
                        "type": "string"
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Creation timestamp"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "dataGeography",
                    "billingType",
                    "status",
                    "createdAt"
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_tenants"
      }
    },
    "/tenants/{tenantId}": {
      "get": {
        "summary": "Get a tenant by ID",
        "description": "Get a tenant by ID.",
        "parameters": [
          {
            "name": "X-Organization-ID",
            "in": "header",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "tenantId",
            "in": "path",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Existing tenant",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Tenant ID"
                    },
                    "showAs": {
                      "type": "string",
                      "description": "Tenant display name"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name set when the tenant was created"
                    },
                    "dataGeography": {
                      "type": "string",
                      "description": "Geographical location where the tenant data is stored",
                      "enum": [
                        "US",
                        "IE",
                        "DE"
                      ]
                    },
                    "billingType": {
                      "type": "string",
                      "description": "Billing type for the tenant",
                      "enum": [
                        "DIRECT",
                        "MSP",
                        "TRIAL"
                      ]
                    },
                    "partner": {
                      "type": "object",
                      "description": "Partner information if the tenant is managed by a partner",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Partner ID"
                        },
                        "name": {
                          "type": "string",
                          "description": "Partner name"
                        }
                      }
                    },
                    "apiHost": {
                      "type": "string",
                      "format": "uri",
                      "description": "API host for the tenant"
                    },
                    "status": {
                      "type": "string",
                      "description": "Tenant status",
                      "enum": [
                        "ACTIVE",
                        "SUSPENDED",
                        "DELETED"
                      ]
                    },
                    "products": {
                      "type": "array",
                      "description": "List of products enabled for the tenant",
                      "items": {
                        "type": "string"
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Creation timestamp"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "dataGeography"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_tenants_tenantId"
      }
    },
    "/actions": {
      "get": {
        "summary": "Get list of actions",
        "description": "Get list of actions",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in a partial response",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "view",
            "in": "query",
            "description": "Type of view to be returned in response",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "summary",
                "full"
              ]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Defines how to sort the data",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^([^:]+)(:(asc|desc))?$"
              }
            },
            "examples": {
              "lastSeenAt": {
                "value": "lastSeenAt"
              },
              "lastSeenAtAsc": {
                "value": "lastSeenAt:asc"
              },
              "lastSeenAtDescHostnameDesc": {
                "value": "lastSeenAt:asc,hostname:desc"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to fetch, starting with 1",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The size of the page requested",
            "schema": {
              "type": "integer",
              "default": 50
            }
          },
          {
            "name": "pageTotal",
            "in": "query",
            "description": "Whether the number of pages should be calculated and returned in the response",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "ids",
            "in": "query",
            "description": "Filter by action IDs",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "name": "endpointIds",
            "in": "query",
            "description": "Filter by endpoint IDs",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "name": "actionType",
            "in": "query",
            "description": "Filter by action type",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "actionState",
            "in": "query",
            "description": "Filter by action state",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "inProgress",
                  "completed",
                  "failed"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of actions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Action ID"
                          },
                          "type": {
                            "type": "string",
                            "description": "Action type"
                          },
                          "state": {
                            "type": "string",
                            "enum": [
                              "inProgress",
                              "completed",
                              "failed"
                            ],
                            "description": "Action state"
                          },
                          "endpointId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Endpoint ID"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Creation timestamp"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Last update timestamp"
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "state",
                          "endpointId",
                          "createdAt",
                          "updatedAt"
                        ]
                      }
                    },
                    "pages": {
                      "type": "object",
                      "properties": {
                        "current": {
                          "type": "integer",
                          "description": "Current page number"
                        },
                        "size": {
                          "type": "integer",
                          "description": "Page size"
                        },
                        "total": {
                          "type": "integer",
                          "description": "Total number of pages"
                        }
                      },
                      "required": [
                        "current",
                        "size"
                      ]
                    }
                  },
                  "required": [
                    "items"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_actions"
      }
    },
    "/app-groups": {
      "get": {
        "summary": "Get list of app groups",
        "description": "Get list of app groups",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in a partial response",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to fetch, starting with 1",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The size of the page requested",
            "schema": {
              "type": "integer",
              "default": 50
            }
          },
          {
            "name": "pageTotal",
            "in": "query",
            "description": "Whether the number of pages should be calculated and returned in the response",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of app groups",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "App group ID"
                          },
                          "name": {
                            "type": "string",
                            "description": "App group name"
                          },
                          "description": {
                            "type": "string",
                            "description": "App group description"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Creation timestamp"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Last update timestamp"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "createdAt",
                          "updatedAt"
                        ]
                      }
                    },
                    "pages": {
                      "type": "object",
                      "properties": {
                        "current": {
                          "type": "integer",
                          "description": "Current page number"
                        },
                        "size": {
                          "type": "integer",
                          "description": "Page size"
                        },
                        "total": {
                          "type": "integer",
                          "description": "Total number of pages"
                        }
                      },
                      "required": [
                        "current",
                        "size"
                      ]
                    }
                  },
                  "required": [
                    "items"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_app-groups"
      },
      "post": {
        "summary": "Create a new app group",
        "description": "Create a new app group",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "App group name"
                  },
                  "description": {
                    "type": "string",
                    "description": "App group description"
                  },
                  "apps": {
                    "type": "array",
                    "description": "List of apps in the group",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "App ID"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    }
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "App group created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "App group ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "App group name"
                    },
                    "description": {
                      "type": "string",
                      "description": "App group description"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Creation timestamp"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Last update timestamp"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_app-groups"
      }
    },
    "/device-groups": {
      "get": {
        "summary": "Get list of device groups",
        "description": "Get list of device groups",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in a partial response",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to fetch, starting with 1",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The size of the page requested",
            "schema": {
              "type": "integer",
              "default": 50
            }
          },
          {
            "name": "pageTotal",
            "in": "query",
            "description": "Whether the number of pages should be calculated and returned in the response",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of device groups",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Device group ID"
                          },
                          "name": {
                            "type": "string",
                            "description": "Device group name"
                          },
                          "description": {
                            "type": "string",
                            "description": "Device group description"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Creation timestamp"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Last update timestamp"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "createdAt",
                          "updatedAt"
                        ]
                      }
                    },
                    "pages": {
                      "type": "object",
                      "properties": {
                        "current": {
                          "type": "integer",
                          "description": "Current page number"
                        },
                        "size": {
                          "type": "integer",
                          "description": "Page size"
                        },
                        "total": {
                          "type": "integer",
                          "description": "Total number of pages"
                        }
                      },
                      "required": [
                        "current",
                        "size"
                      ]
                    }
                  },
                  "required": [
                    "items"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_device-groups"
      },
      "post": {
        "summary": "Create a new device group",
        "description": "Create a new device group",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Device group name"
                  },
                  "description": {
                    "type": "string",
                    "description": "Device group description"
                  },
                  "devices": {
                    "type": "array",
                    "description": "List of devices in the group",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Device ID"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    }
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Device group created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Device group ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "Device group name"
                    },
                    "description": {
                      "type": "string",
                      "description": "Device group description"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Creation timestamp"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Last update timestamp"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_device-groups"
      }
    },
    "/devices": {
      "get": {
        "summary": "Get list of devices",
        "description": "Get list of devices",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields to return in a partial response",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "view",
            "in": "query",
            "description": "Type of view to be returned in response",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "summary",
                "full"
              ]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Defines how to sort the data",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^([^:]+)(:(asc|desc))?$"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to fetch, starting with 1",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The size of the page requested",
            "schema": {
              "type": "integer",
              "default": 50
            }
          },
          {
            "name": "pageTotal",
            "in": "query",
            "description": "Whether the number of pages should be calculated and returned in the response",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "ids",
            "in": "query",
            "description": "Filter by device IDs",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search for items that match the given terms",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of devices",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Device ID"
                          },
                          "hostname": {
                            "type": "string",
                            "description": "Device hostname"
                          },
                          "type": {
                            "type": "string",
                            "description": "Device type",
                            "enum": [
                              "android",
                              "ios",
                              "windows",
                              "macos"
                            ]
                          },
                          "model": {
                            "type": "string",
                            "description": "Device model"
                          },
                          "osVersion": {
                            "type": "string",
                            "description": "Operating system version"
                          },
                          "lastSeenAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Last seen timestamp"
                          },
                          "status": {
                            "type": "string",
                            "description": "Device status",
                            "enum": [
                              "online",
                              "offline",
                              "warning",
                              "error"
                            ]
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Creation timestamp"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Last update timestamp"
                          }
                        },
                        "required": [
                          "id",
                          "hostname",
                          "type",
                          "status",
                          "createdAt",
                          "updatedAt"
                        ]
                      }
                    },
                    "pages": {
                      "type": "object",
                      "properties": {
                        "current": {
                          "type": "integer",
                          "description": "Current page number"
                        },
                        "size": {
                          "type": "integer",
                          "description": "Page size"
                        },
                        "total": {
                          "type": "integer",
                          "description": "Total number of pages"
                        }
                      },
                      "required": [
                        "current",
                        "size"
                      ]
                    }
                  },
                  "required": [
                    "items"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_devices"
      },
      "post": {
        "summary": "Register a new device",
        "description": "Register a new device",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "hostname": {
                    "type": "string",
                    "description": "Device hostname"
                  },
                  "type": {
                    "type": "string",
                    "description": "Device type",
                    "enum": [
                      "android",
                      "ios",
                      "windows",
                      "macos"
                    ]
                  },
                  "model": {
                    "type": "string",
                    "description": "Device model"
                  },
                  "osVersion": {
                    "type": "string",
                    "description": "Operating system version"
                  },
                  "userEmail": {
                    "type": "string",
                    "format": "email",
                    "description": "User email"
                  }
                },
                "required": [
                  "hostname",
                  "type"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Device registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Device ID"
                    },
                    "hostname": {
                      "type": "string",
                      "description": "Device hostname"
                    },
                    "type": {
                      "type": "string",
                      "description": "Device type",
                      "enum": [
                        "android",
                        "ios",
                        "windows",
                        "macos"
                      ]
                    },
                    "enrollmentToken": {
                      "type": "string",
                      "description": "Enrollment token for device registration"
                    },
                    "enrollmentUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "Enrollment URL for device registration"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Creation timestamp"
                    }
                  },
                  "required": [
                    "id",
                    "hostname",
                    "type",
                    "enrollmentToken",
                    "enrollmentUrl",
                    "createdAt"
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_devices"
      }
    },
    "/operating-systems": {
      "get": {
        "summary": "Get list of supported operating systems",
        "description": "Get list of supported operating systems",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of supported operating systems",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Operating system ID"
                          },
                          "name": {
                            "type": "string",
                            "description": "Operating system name"
                          },
                          "type": {
                            "type": "string",
                            "description": "Operating system type",
                            "enum": [
                              "android",
                              "ios",
                              "windows",
                              "macos"
                            ]
                          },
                          "versions": {
                            "type": "array",
                            "description": "Supported versions",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "type",
                          "versions"
                        ]
                      }
                    }
                  },
                  "required": [
                    "items"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_operating-systems"
      }
    },
    "/operating-systems/{id}": {
      "get": {
        "summary": "Get details of a specific operating system",
        "description": "Get details of a specific operating system by ID",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Operating system ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operating system details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Operating system ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "Operating system name"
                    },
                    "type": {
                      "type": "string",
                      "description": "Operating system type",
                      "enum": [
                        "android",
                        "ios",
                        "windows",
                        "macos"
                      ]
                    },
                    "versions": {
                      "type": "array",
                      "description": "Supported versions",
                      "items": {
                        "type": "string"
                      }
                    },
                    "features": {
                      "type": "array",
                      "description": "Supported features",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "type",
                    "versions"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_operating-systems_id"
      }
    },
    "/static-setup-data/ixm-auto-enrollment": {
      "get": {
        "summary": "Get IXM auto-enrollment setup data",
        "description": "Get IXM auto-enrollment setup data",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "IXM auto-enrollment setup data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "enrollmentUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "Enrollment URL"
                    },
                    "enrollmentToken": {
                      "type": "string",
                      "description": "Enrollment token"
                    },
                    "qrCodeUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "QR code URL"
                    }
                  },
                  "required": [
                    "enrollmentUrl",
                    "enrollmentToken",
                    "qrCodeUrl"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_static-setup-data_ixm-auto-enrollment"
      }
    },
    "/licenses": {
      "get": {
        "summary": "Get tenant licenses",
        "description": "Get tenant licenses.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Tenant ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Tenant licenses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "organization": {
                      "type": "object",
                      "required": [
                        "id"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Organization ID"
                        }
                      }
                    },
                    "tenant": {
                      "type": "object",
                      "description": "Linked tenant"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/License"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "get_licenses"
      }
    },
    "/licenses/firewalls": {
      "get": {
        "summary": "Get firewalls claimed by tenant",
        "description": "Get firewalls claimed by tenant or managed by the partner.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Tenant ID"
          },
          {
            "name": "X-Partner-ID",
            "in": "header",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Partner ID"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "The page number to fetch, starting with 1"
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 50
            },
            "description": "The size of the page requested"
          },
          {
            "name": "pageTotal",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Whether the number of pages should be calculated and returned in the response"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "([^:]+)(:(asc|desc))?"
            },
            "description": "Sort the list based on the column"
          }
        ],
        "responses": {
          "200": {
            "description": "List of firewalls",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FirewallLicense"
                      }
                    },
                    "pages": {
                      "type": "object",
                      "properties": {
                        "current": {
                          "type": "integer"
                        },
                        "total": {
                          "type": "integer"
                        },
                        "size": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "get_licenses_firewalls"
      }
    },
    "/firewall-groups": {
      "get": {
        "summary": "Retrieve firewall groups",
        "description": "Retrieve firewall groups.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Tenant ID"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "The page number to fetch, starting with 1"
          },
          {
            "name": "pageTotal",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Whether the number of pages should be calculated and returned in the response"
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100
            },
            "description": "The size of the page requested"
          },
          {
            "name": "recurseSubgroups",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Whether to include nested child groups or not"
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Search term"
          },
          {
            "name": "searchFields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Fields to search in"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FirewallGroup"
                      }
                    },
                    "pages": {
                      "type": "object",
                      "properties": {
                        "current": {
                          "type": "integer"
                        },
                        "total": {
                          "type": "integer"
                        },
                        "size": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "get_firewall-groups"
      },
      "post": {
        "summary": "Create firewall group",
        "description": "Create firewall group.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Tenant ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Group name"
                  },
                  "assignFirewalls": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "description": "List of firewall IDs to assign to the group"
                  },
                  "parentGroupId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Parent group ID"
                  },
                  "configImportSourceFirewallId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Firewall ID to import configuration from"
                  }
                }
              },
              "example": {
                "name": "Test group",
                "configImportSourceFirewallId": "df1f8ccf-1223-46ed-9042-6672a8326b8c",
                "assignFirewalls": [
                  "df1f8ccf-1223-46ed-9042-6672a8326b8c",
                  "97483e58-55d7-44fb-b03f-9422f106ef66",
                  "7e5605c1-da16-4995-9679-767a8b79328d"
                ],
                "parentGroupId": "ab1f8ccf-1223-46ed-9042-6672a8326b8c"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Group created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FirewallGroup"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "post_firewall-groups"
      }
    },
    "/firewall-groups/{groupId}": {
      "patch": {
        "summary": "Change firewall group name",
        "description": "Change firewall group name. You can also assign firewalls to group. Or remove firewalls from a group.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Tenant ID"
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Firewall group ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "New group name"
                  },
                  "assignFirewalls": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "description": "List of firewall IDs to assign to the group"
                  }
                }
              },
              "examples": {
                "nameChange": {
                  "value": {
                    "name": "New auto-scale group"
                  }
                },
                "assignFirewalls": {
                  "value": {
                    "assignFirewalls": [
                      "2d26e1c6-543e-4989-a949-e48d866f05d1"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Group updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FirewallGroup"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "patch_firewall-groups_groupId"
      },
      "delete": {
        "summary": "Delete firewall group",
        "description": "Delete firewall group using its ID.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Tenant ID"
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Firewall group ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Group deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "deleted"
                  ],
                  "properties": {
                    "deleted": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication required"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "delete_firewall-groups_groupId"
      }
    },
    "/firewall-groups/{groupId}/firewalls/sync-status": {
      "get": {
        "summary": "Get synchronization status",
        "description": "Synchronization status for the firewalls in a group.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Tenant ID"
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Firewall group ID"
          },
          {
            "name": "ids",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "description": "CSV based UUID"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "The page number to fetch, starting with 1"
          },
          {
            "name": "pageTotal",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Whether the number of pages should be calculated and returned in the response"
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100
            },
            "description": "The size of the page requested"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FirewallSyncStatus"
                      }
                    },
                    "pages": {
                      "type": "object",
                      "properties": {
                        "current": {
                          "type": "integer"
                        },
                        "total": {
                          "type": "integer"
                        },
                        "size": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "get_firewall-groups_groupId_firewalls_sync-status"
      }
    },
    "/firewalls": {
      "get": {
        "summary": "List firewalls",
        "description": "List of firewalls.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Tenant ID"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "The page number to fetch, starting with 1"
          },
          {
            "name": "pageTotal",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Whether the number of pages should be calculated and returned in the response"
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100
            },
            "description": "The size of the page requested"
          },
          {
            "name": "groupId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Firewall group ID, or 'ungrouped'. 'ungrouped' is a virtual group that hold all firewalls that aren't part of a firewall group."
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Search term"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Firewall"
                      }
                    },
                    "pages": {
                      "type": "object",
                      "properties": {
                        "current": {
                          "type": "integer"
                        },
                        "total": {
                          "type": "integer"
                        },
                        "size": {
                          "type": "integer"
                        },
                        "items": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "get_firewalls"
      }
    },
    "/firewalls/{firewallId}": {
      "patch": {
        "summary": "Update firewall",
        "description": "Update firewalls with supplied values.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Tenant ID"
          },
          {
            "name": "firewallId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Firewall ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Firewall name"
                  },
                  "geoLocation": {
                    "type": "object",
                    "properties": {
                      "latitude": {
                        "type": "string"
                      },
                      "longitude": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "example": {
                "name": "FW-label",
                "geoLocation": {
                  "latitude": "20.64",
                  "longitude": "122.43"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Firewall updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Firewall"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "patch_firewalls_firewallId"
      },
      "delete": {
        "summary": "Delete firewall",
        "description": "Delete firewall using its ID.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Tenant ID"
          },
          {
            "name": "firewallId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Firewall ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Firewall deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "deleted"
                  ],
                  "properties": {
                    "deleted": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication required"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "delete_firewalls_firewallId"
      }
    },
    "/firewalls/{firewallId}/action": {
      "post": {
        "summary": "Perform action on firewall",
        "description": "Action you want to do to a firewall.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Tenant ID"
          },
          {
            "name": "firewallId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Firewall ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "action"
                ],
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "Action type"
                  }
                }
              },
              "example": {
                "action": "approveManagement"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Action performed successfully"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "post_firewalls_firewallId_action"
      }
    },
    "/firewalls/actions/firmware-upgrade": {
      "post": {
        "summary": "Upgrade firmware",
        "description": "Upgrade firewalls.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Tenant ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "firewalls"
                ],
                "properties": {
                  "firewalls": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "id"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Firewall ID"
                        },
                        "upgradeToVersion": {
                          "type": "string",
                          "description": "Version of the firewall to you want to upgrade to"
                        },
                        "upgradeAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "When to upgrade the firewall"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Upgrade initiated successfully"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "post_firewalls_actions_firmware-upgrade"
      },
      "delete": {
        "summary": "Cancel firmware upgrade",
        "description": "Cancel scheduled upgrade.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Tenant ID"
          },
          {
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Firewall IDs (CSV format)"
          }
        ],
        "responses": {
          "200": {
            "description": "Upgrade cancelled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "deleted"
                  ],
                  "properties": {
                    "deleted": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "delete_firewalls_actions_firmware-upgrade"
      }
    },
    "/firewalls/actions/firmware-upgrade-check": {
      "post": {
        "summary": "Check firmware",
        "description": "Check firmware for firewalls.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Tenant ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "firewalls"
                ],
                "properties": {
                  "firewalls": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "description": "Firewall IDs",
                    "maxItems": 1000
                  }
                }
              },
              "example": {
                "firewalls": [
                  "c83c9481-f63c-4eb8-8793-e81eb9d66ef4",
                  "a83c9481-f63c-4eb8-8793-e81eb9d66ef5"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Firmware check initiated successfully"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "post_firewalls_actions_firmware-upgrade-check"
      }
    },
    "/downloads": {
      "get": {
        "summary": "Get downloads",
        "description": "Get downloads for the specified tenant.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Tenant ID."
          },
          {
            "name": "product",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "coreAgent",
                "interceptX",
                "xdr",
                "endpointProtection",
                "deviceEncryption",
                "mtr",
                "ztna"
              ]
            },
            "description": "Product type"
          },
          {
            "name": "os",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "windows",
                "linux",
                "macOS"
              ]
            },
            "description": "Operating system"
          }
        ],
        "responses": {
          "200": {
            "description": "Downloads retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "product": {
                            "type": "string"
                          },
                          "os": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get_downloads"
      }
    },
    "/endpoint-groups": {
      "get": {
        "summary": "Get endpoint groups",
        "description": "Get endpoint groups for the specified tenant.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Tenant ID."
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "computer",
                "server"
              ]
            },
            "description": "Group type"
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Search term"
          },
          {
            "name": "ids",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Group IDs"
          },
          {
            "name": "pageTotal",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Whether to include total count"
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Page size"
          },
          {
            "name": "pageKey",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Page key"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "description"
                ]
              }
            },
            "description": "Sort criteria"
          }
        ],
        "responses": {
          "200": {
            "description": "Endpoint groups retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "pages": {
                      "type": "object",
                      "properties": {
                        "fromKey": {
                          "type": "string"
                        },
                        "nextKey": {
                          "type": "string"
                        },
                        "size": {
                          "type": "integer"
                        },
                        "total": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get_endpoint-groups"
      },
      "post": {
        "summary": "Create endpoint group",
        "description": "Create a new endpoint group.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Tenant ID."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "type"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "computer",
                      "server"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Endpoint group created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post_endpoint-groups"
      }
    },
    "/endpoint-groups/{groupId}": {
      "get": {
        "summary": "Get endpoint group",
        "description": "Get details of a specific endpoint group.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Tenant ID."
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Endpoint group ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Endpoint group retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get_endpoint-groups_groupId"
      },
      "patch": {
        "summary": "Update endpoint group",
        "description": "Update an existing endpoint group.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Tenant ID."
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Endpoint group ID."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Endpoint group updated successfully."
          }
        },
        "operationId": "patch_endpoint-groups_groupId"
      },
      "delete": {
        "summary": "Delete endpoint group",
        "description": "Delete an endpoint group.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Tenant ID."
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Endpoint group ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Endpoint group deleted successfully."
          }
        },
        "operationId": "delete_endpoint-groups_groupId"
      }
    },
    "/endpoint-groups/{groupId}/endpoints": {
      "get": {
        "summary": "Get endpoints in group",
        "description": "Get endpoints that belong to a specific group.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Tenant ID."
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Endpoint group ID."
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Search term"
          },
          {
            "name": "ids",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Endpoint IDs"
          },
          {
            "name": "pageTotal",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Whether to include total count"
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Page size"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "hostname",
                  "groupName",
                  "associatedPersonName",
                  "ipAddresses",
                  "osName"
                ]
              }
            },
            "description": "Sort criteria"
          }
        ],
        "responses": {
          "200": {
            "description": "Endpoints retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "hostname": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get_endpoint-groups_groupId_endpoints"
      },
      "post": {
        "summary": "Add endpoints to group",
        "description": "Add endpoints to a specific group.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Tenant ID."
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Endpoint group ID."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "ids"
                ],
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Endpoints added to group successfully."
          }
        },
        "operationId": "post_endpoint-groups_groupId_endpoints"
      },
      "delete": {
        "summary": "Remove endpoints from group",
        "description": "Remove endpoints from a specific group.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Tenant ID."
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Endpoint group ID."
          },
          {
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Endpoint IDs to remove"
          }
        ],
        "responses": {
          "200": {
            "description": "Endpoints removed from group successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "removed": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "delete_endpoint-groups_groupId_endpoints"
      }
    },
    "/endpoint-groups/{groupId}/endpoints/{endpointId}": {
      "delete": {
        "summary": "Remove endpoint from group",
        "description": "Remove a specific endpoint from a group.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Tenant ID."
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Endpoint group ID."
          },
          {
            "name": "endpointId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Endpoint ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Endpoint removed from group successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "removed": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "delete_endpoint-groups_groupId_endpoints_endpointId"
      }
    },
    "/endpoint-groups/types/{groupType}": {
      "get": {
        "summary": "Get endpoint groups by type",
        "description": "Get endpoint groups of a specific type.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Tenant ID."
          },
          {
            "name": "groupType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "computer",
                "server"
              ]
            },
            "description": "Group type."
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Sort criteria"
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Fields to return"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Page number"
          },
          {
            "name": "pageTotal",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include total count"
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Page size"
          },
          {
            "name": "ids",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Group IDs"
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Search term"
          },
          {
            "name": "searchFields",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Fields to search in"
          }
        ],
        "responses": {
          "200": {
            "description": "Endpoint groups retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get_endpoint-groups_types_groupType"
      }
    },
    "/endpoints": {
      "get": {
        "summary": "Get endpoints",
        "description": "Get all endpoints for the specified tenant.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Tenant ID."
          },
          {
            "name": "pageFromKey",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The key of the item from where to fetch a page."
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 50
            },
            "description": "The size of the page requested."
          },
          {
            "name": "pageTotal",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Whether the number of pages should be calculated and returned in the response."
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sort criteria for endpoint groups."
          },
          {
            "name": "healthStatus",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "bad",
                "good",
                "suspicious",
                "unknown"
              ]
            },
            "description": "Health status filter"
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "computer",
                "server",
                "securityVm"
              ]
            },
            "description": "Endpoint type filter"
          },
          {
            "name": "tamperProtectionEnabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Tamper protection enabled filter"
          },
          {
            "name": "tamperProtectionSupported",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Tamper protection supported filter"
          },
          {
            "name": "lockdownStatus",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "creatingWhitelist",
                "installing",
                "locked",
                "notInstalled",
                "registering",
                "starting",
                "stopping",
                "unavailable",
                "uninstalled",
                "unlocked"
              ]
            },
            "description": "Lockdown status filter"
          },
          {
            "name": "overallEncryptionStatus",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "notEncrypted",
                "encrypted",
                "encrypting",
                "notSupported",
                "suspended",
                "notAvailable",
                "unmanaged"
              ]
            },
            "description": "Overall encryption status filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Endpoints retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "hostname": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "healthStatus": {
                            "type": "string"
                          },
                          "lastSeenAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "pages": {
                      "type": "object",
                      "properties": {
                        "fromKey": {
                          "type": "string"
                        },
                        "nextKey": {
                          "type": "string"
                        },
                        "size": {
                          "type": "integer"
                        },
                        "total": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get_endpoints"
      }
    },
    "/endpoints/{endpointId}": {
      "get": {
        "summary": "Get endpoint",
        "description": "Get details of a specific endpoint.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Tenant ID."
          },
          {
            "name": "endpointId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Endpoint ID."
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Fields to return"
          },
          {
            "name": "view",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "summary",
                "full"
              ]
            },
            "description": "View type"
          }
        ],
        "responses": {
          "200": {
            "description": "Endpoint retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "hostname": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "healthStatus": {
                      "type": "string"
                    },
                    "lastSeenAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get_endpoints_endpointId"
      },
      "delete": {
        "summary": "Delete endpoint",
        "description": "Delete a specific endpoint.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Tenant ID."
          },
          {
            "name": "endpointId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Endpoint ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Endpoint deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "deleted": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "delete_endpoints_endpointId"
      }
    },
    "/endpoints/{endpointId}/adaptive-attack-protection": {
      "get": {
        "summary": "Get adaptive attack protection settings",
        "description": "Get Adaptive Attack Protection settings for an endpoint.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Tenant ID."
          },
          {
            "name": "endpointId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Endpoint ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Adaptive Attack Protection settings retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "desiredState": {
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "type": "boolean"
                        },
                        "expiresAfter": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get_endpoints_endpointId_adaptive-attack-protection"
      },
      "post": {
        "summary": "Update adaptive attack protection settings",
        "description": "Update Adaptive Attack Protection settings for an endpoint.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Tenant ID."
          },
          {
            "name": "endpointId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Endpoint ID."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "expiresAfter": {
                    "type": "string",
                    "enum": [
                      "P7D",
                      "P1D"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Adaptive Attack Protection settings updated successfully."
          }
        },
        "operationId": "post_endpoints_endpointId_adaptive-attack-protection"
      }
    },
    "/endpoints/{endpointId}/forensic-logs": {
      "post": {
        "summary": "Request forensic logs",
        "description": "Sends a request to the endpoint to collect forensic log.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Tenant ID."
          },
          {
            "name": "endpointId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Endpoint ID."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "mode": {
                    "type": "string",
                    "enum": [
                      "fast"
                    ]
                  },
                  "expires": {
                    "type": "string",
                    "enum": [
                      "PT4H"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Forensic log request sent successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post_endpoints_endpointId_forensic-logs"
      }
    },
    "/endpoints/{endpointId}/forensic-logs/{forensicLogRequestId}": {
      "get": {
        "summary": "Get forensic log status",
        "description": "Gets the status of the forensic log collection.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Tenant ID."
          },
          {
            "name": "endpointId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Endpoint ID."
          },
          {
            "name": "forensicLogRequestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Forensic log request ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Forensic log collection status.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "requested",
                        "inProgress",
                        "completed",
                        "failed"
                      ]
                    },
                    "downloadUrl": {
                      "type": "string"
                    },
                    "expiresAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get_endpoints_endpointId_forensic-logs_forensicLogRequestId"
      }
    },
    "/migrations": {
      "get": {
        "summary": "Get migrations",
        "description": "Get migrations for the specified tenant.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Tenant ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Migrations retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get_migrations"
      },
      "post": {
        "summary": "Create migration",
        "description": "Create a new migration.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Tenant ID."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Migration created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post_migrations"
      }
    },
    "/policies": {
      "get": {
        "summary": "Get policies",
        "description": "Get policies for the specified tenant.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Tenant ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Policies retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get_policies"
      },
      "post": {
        "summary": "Create policy",
        "description": "Create a new policy.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Tenant ID."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Policy created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post_policies"
      }
    },
    "/mailboxes": {
      "get": {
        "summary": "Get a list of mailboxes",
        "description": "Get a list of mailboxes.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items to return per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50
            }
          },
          {
            "name": "pageTotal",
            "in": "query",
            "description": "Total number of pages to return",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search term to filter results",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Field to sort by",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort order (asc or desc)",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type of mailbox",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "user",
                "distributionList",
                "publicFolder"
              ]
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Status of mailbox",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "neverRequested",
                "approvalPending",
                "approved",
                "rejected",
                "revoked"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of mailboxes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "user",
                              "distributionList",
                              "publicFolder"
                            ]
                          },
                          "email": {
                            "type": "string",
                            "format": "email"
                          }
                        }
                      }
                    },
                    "pages": {
                      "type": "object",
                      "properties": {
                        "current": {
                          "type": "integer"
                        },
                        "size": {
                          "type": "integer"
                        },
                        "total": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "get_mailboxes"
      },
      "post": {
        "summary": "Create a new mailbox",
        "description": "Create a new mailbox.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Mailbox details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "type"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the mailbox",
                    "minLength": 1,
                    "maxLength": 256
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of mailbox",
                    "enum": [
                      "user",
                      "distributionList",
                      "publicFolder"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Mailbox created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "post_mailboxes"
      }
    },
    "/mailboxes/{id}": {
      "get": {
        "summary": "Get a specific mailbox",
        "description": "Get details of a specific mailbox.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Mailbox ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Mailbox details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "user",
                        "distributionList",
                        "publicFolder"
                      ]
                    },
                    "email": {
                      "type": "string",
                      "format": "email"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "get_mailboxes_id"
      },
      "patch": {
        "summary": "Update a mailbox",
        "description": "Update name of the mailbox.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Mailbox ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Mailbox update details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "New name for the mailbox",
                    "minLength": 1,
                    "maxLength": 256
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Mailbox updated successfully"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "patch_mailboxes_id"
      },
      "delete": {
        "summary": "Delete a mailbox",
        "description": "Delete the mailbox.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Mailbox ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Mailbox deleted or can't find mailbox",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "deleted": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Directory synced mailbox"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "delete_mailboxes_id"
      }
    },
    "/mailboxes/{id}/aliases": {
      "post": {
        "summary": "Add and remove aliases",
        "description": "Add and remove aliases of the mailbox.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Mailbox ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Update aliases request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "add": {
                    "type": "array",
                    "description": "Add aliases of the mailbox",
                    "items": {
                      "type": "string"
                    },
                    "maxItems": 100
                  },
                  "remove": {
                    "type": "array",
                    "description": "Remove aliases of the mailbox",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Aliases updated successfully"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "post_mailboxes_id_aliases"
      }
    },
    "/mailboxes/{id}/bulksender-privilege-request": {
      "post": {
        "summary": "Request bulk sender privilege",
        "description": "Generate request to get bulk sender privilege for the mailbox.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Mailbox ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Bulk sender privilege request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "count",
                  "period"
                ],
                "properties": {
                  "count": {
                    "type": "integer",
                    "description": "Number of emails per period"
                  },
                  "period": {
                    "type": "string",
                    "description": "Interval type",
                    "example": "d"
                  },
                  "purpose": {
                    "type": "string",
                    "description": "Purpose of the request"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Bulk sender privilege request submitted successfully"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "post_mailboxes_id_bulksender-privilege-request"
      }
    },
    "/mailboxes/{id}/delegates": {
      "post": {
        "summary": "Add and remove delegates",
        "description": "Add and remove delegates of the mailbox.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Mailbox ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Update delegates request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "add": {
                    "type": "array",
                    "description": "Add delegates of the mailbox",
                    "items": {
                      "type": "string"
                    },
                    "maxItems": 50
                  },
                  "remove": {
                    "type": "array",
                    "description": "Remove delegates of the mailbox",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Delegates updated successfully"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "post_mailboxes_id_delegates"
      }
    },
    "/mailboxes/{id}/distribution-list-owners": {
      "post": {
        "summary": "Add and remove distribution list owners",
        "description": "Add and remove distribution list owners of the mailbox.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Mailbox ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Update distribution list owners request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "add": {
                    "type": "array",
                    "description": "Add distribution list owners of the mailbox",
                    "items": {
                      "type": "string"
                    },
                    "maxItems": 1
                  },
                  "remove": {
                    "type": "array",
                    "description": "Remove distribution list owners of the mailbox",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Distribution list owners updated successfully"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "post_mailboxes_id_distribution-list-owners"
      }
    },
    "/mailboxes/bulk": {
      "post": {
        "summary": "Add multiple mailboxes",
        "description": "Request to add multiple mailboxes.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Add multiple mailbox request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "items"
                ],
                "properties": {
                  "items": {
                    "type": "array",
                    "description": "List of new mailboxes",
                    "items": {
                      "type": "object",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Mailbox type",
                          "enum": [
                            "user",
                            "distributionList",
                            "publicFolder"
                          ]
                        }
                      }
                    },
                    "maxItems": 10
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Mailboxes added successfully"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "post_mailboxes_bulk"
      }
    },
    "/mailboxes/delete": {
      "post": {
        "summary": "Delete multiple mailboxes",
        "description": "Delete multiple mailboxes.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Delete multiple mailbox request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "items"
                ],
                "properties": {
                  "items": {
                    "type": "array",
                    "description": "List of mailbox IDs",
                    "items": {
                      "type": "object",
                      "required": [
                        "id"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Mailbox ID"
                        }
                      }
                    },
                    "maxItems": 20
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Mailboxes deleted successfully"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "post_mailboxes_delete"
      }
    },
    "/messages/{id}/clawback": {
      "post": {
        "summary": "Clawback message",
        "description": "Clawback message (can clawback message for specific recipients).",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID from 'X-Sophos-Email-ID' MIME header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Clawback messages from recipient's inbox",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "recipients": {
                    "type": "array",
                    "description": "Target email addresses. If not specified, clawback is attempted for all recipients.",
                    "items": {
                      "type": "string",
                      "format": "email"
                    },
                    "maxItems": 500
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Clawback initiated successfully"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "post_messages_id_clawback"
      }
    },
    "/messages/{id}/status": {
      "get": {
        "summary": "Get message status",
        "description": "Get current status of a message.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID from 'X-Sophos-Email-ID' MIME header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status of clawback job",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "description": "Current status for each recipient",
                      "items": {
                        "type": "object",
                        "properties": {
                          "recipient": {
                            "type": "string",
                            "format": "email",
                            "example": "user@example.com"
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of the clawback operation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "get_messages_id_status"
      }
    },
    "/post-delivery-quarantine/downloads/{downloadId}/status": {
      "get": {
        "summary": "Get download status",
        "description": "Get status of a post-delivery quarantine download.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "downloadId",
            "in": "path",
            "description": "Download ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Download status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "completed",
                        "failed"
                      ]
                    },
                    "url": {
                      "type": "string",
                      "format": "uri",
                      "description": "URL to download the file (only present when status is completed)"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "get_post-delivery-quarantine_downloads_downloadId_status"
      }
    },
    "/queries/detection-groups": {
      "post": {
        "summary": "Run a detection groups query",
        "description": "Run a detection groups query.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Detection groups query parameters",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "detectionRule": {
                    "type": "string",
                    "description": "Detection rule to filter by",
                    "example": "MS-SEC-GRAPH-open"
                  },
                  "severity": {
                    "type": "array",
                    "description": "Severity levels to filter by",
                    "items": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 10
                    },
                    "example": [
                      7,
                      8,
                      9,
                      10
                    ]
                  },
                  "sort": {
                    "type": "array",
                    "description": "Sorting parameters",
                    "items": {
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string",
                          "description": "Field to sort by"
                        },
                        "direction": {
                          "type": "string",
                          "enum": [
                            "asc",
                            "desc"
                          ],
                          "description": "Sort direction"
                        }
                      }
                    },
                    "example": [
                      {
                        "field": "severity",
                        "direction": "asc"
                      }
                    ]
                  },
                  "from": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Start time for the query",
                    "example": "2021-11-10T12:23:54.780"
                  },
                  "to": {
                    "type": "string",
                    "format": "date-time",
                    "description": "End time for the query",
                    "example": "2021-11-17T12:23:54.780"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detection groups query initiated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Query run ID"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "post_queries_detection-groups"
      }
    },
    "/queries/detection-groups/{runId}": {
      "get": {
        "summary": "Return the group query run with the given ID",
        "description": "Return the group query run with the given ID.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "runId",
            "in": "path",
            "description": "Run ID of a query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of the group query run",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "ID of the run"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Creation timestamp"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "running",
                        "completed",
                        "failed"
                      ],
                      "description": "Status of the query run"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "get_queries_detection-groups_runId"
      }
    },
    "/queries/detection-groups/{runId}/results": {
      "get": {
        "summary": "Return the results of the group query run with the given ID",
        "description": "Return the results of the group query run with the given ID.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "runId",
            "in": "path",
            "description": "Run ID of a query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to fetch, starting with 1",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The size of the page requested",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of the group query results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "detectionRule": {
                            "type": "string"
                          },
                          "severity": {
                            "type": "integer"
                          },
                          "count": {
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "pages": {
                      "type": "object",
                      "properties": {
                        "current": {
                          "type": "integer"
                        },
                        "size": {
                          "type": "integer"
                        },
                        "total": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "get_queries_detection-groups_runId_results"
      }
    },
    "/queries/detections": {
      "post": {
        "summary": "Run a query on the detections",
        "description": "Run a query on the detections. The default time range is one day.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Detections query parameters",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "detectionRule": {
                    "type": "string",
                    "description": "Detection rule to filter by",
                    "example": "MS-SEC-GRAPH-open"
                  },
                  "severity": {
                    "type": "array",
                    "description": "Severity levels to filter by",
                    "items": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 10
                    },
                    "example": [
                      7,
                      8,
                      9,
                      10
                    ]
                  },
                  "sort": {
                    "type": "array",
                    "description": "Sorting parameters",
                    "items": {
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string",
                          "description": "Field to sort by"
                        },
                        "direction": {
                          "type": "string",
                          "enum": [
                            "asc",
                            "desc"
                          ],
                          "description": "Sort direction"
                        }
                      }
                    },
                    "example": [
                      {
                        "field": "severity",
                        "direction": "asc"
                      }
                    ]
                  },
                  "from": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Start time for the query",
                    "example": "2021-11-10T12:23:54.780"
                  },
                  "to": {
                    "type": "string",
                    "format": "date-time",
                    "description": "End time for the query",
                    "example": "2021-11-17T12:23:54.780"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detections query initiated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Query run ID"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "post_queries_detections"
      }
    },
    "/queries/detections/{runId}": {
      "get": {
        "summary": "Return the detections query run with the given ID",
        "description": "Return the detections query run with the given ID.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "runId",
            "in": "path",
            "description": "Run ID of a query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of the detections query run",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "ID of the run"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Creation timestamp"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "running",
                        "completed",
                        "failed"
                      ],
                      "description": "Status of the query run"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "get_queries_detections_runId"
      }
    },
    "/queries/detections/{runId}/results": {
      "get": {
        "summary": "Return the results of the detections query run with the given ID",
        "description": "Return the results of the detections query run with the given ID.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "runId",
            "in": "path",
            "description": "Run ID of a query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to fetch, starting with 1",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The size of the page requested",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of the detections query results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "detectionRule": {
                            "type": "string"
                          },
                          "severity": {
                            "type": "integer"
                          },
                          "detectedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "source": {
                            "type": "string"
                          },
                          "deviceName": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "pages": {
                      "type": "object",
                      "properties": {
                        "current": {
                          "type": "integer"
                        },
                        "size": {
                          "type": "integer"
                        },
                        "total": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "get_queries_detections_runId_results"
      }
    },
    "/queries/detections/counts": {
      "get": {
        "summary": "Get detection counts grouped by severity and type",
        "description": "Get detection counts grouped by severity and type. If resolution, to, and from parameters aren't provided, resolution is set to day, to is set to current date, and from is set to 30 days from the current date and time.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Start of time range for query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "End of time range for query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "resolution",
            "in": "query",
            "description": "Time interval used for breakdown of detection counts",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "day",
                "hour",
                "minute"
              ]
            }
          },
          {
            "name": "ids",
            "in": "query",
            "description": "The Detection ID",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "maxItems": 10
            }
          },
          {
            "name": "detectionRule",
            "in": "query",
            "description": "Detection rule to filter by",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "severity",
            "in": "query",
            "description": "Severity level to filter by",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 10
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type to filter by",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "process",
                "threat",
                "vulnerability"
              ]
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Category to filter by",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "cloud",
                "endpoint",
                "email",
                "firewall",
                "iam",
                "network",
                "compound",
                "backupAndRecovery"
              ]
            }
          },
          {
            "name": "source",
            "in": "query",
            "description": "Source to filter by",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceNameContains",
            "in": "query",
            "description": "Filter by device name containing this string",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of detection counts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "counts": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "get_queries_detections_counts"
      }
    },
    "/admins/{adminId}/role-assignments": {
      "get": {
        "summary": "Get the list of role assignments for given admin",
        "description": "Get the list of role assignments for given admin.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "adminId",
            "in": "path",
            "description": "Admin ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of role assignments for an admin",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "roleId": {
                            "type": "string",
                            "format": "uuid"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "get_admins_adminId_role-assignments"
      },
      "post": {
        "summary": "Assign a role of principal type 'user' to a tenant admin",
        "description": "Assign a role of principal type 'user' to a tenant admin. Any existing assignment is overridden.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "adminId",
            "in": "path",
            "description": "Admin ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "New role assignment request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roleId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Role ID to assign"
                  }
                },
                "required": [
                  "roleId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Role assigned successfully"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "post_admins_adminId_role-assignments"
      }
    },
    "/admins/{adminId}/role-assignments/{assignmentId}": {
      "get": {
        "summary": "Get tenant admin role assignment by ID",
        "description": "Get tenant admin role assignment by ID.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "adminId",
            "in": "path",
            "description": "Admin ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "assignmentId",
            "in": "path",
            "description": "Role Assignment ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role assignment details"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "get_admins_adminId_role-assignments_assignmentId"
      },
      "delete": {
        "summary": "Remove role assignment from an admin",
        "description": "Remove role assignment from an admin.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "adminId",
            "in": "path",
            "description": "Admin ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "assignmentId",
            "in": "path",
            "description": "Role Assignment ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role assignment removed"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "delete_admins_adminId_role-assignments_assignmentId"
      }
    },
    "/profiles": {
      "get": {
        "summary": "List runtime detection profiles",
        "description": "List runtime detection profiles [Latest version].",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to fetch, starting with 1",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The size of the page requested",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50
            }
          },
          {
            "name": "searchTerm",
            "in": "query",
            "description": "Search by profile name",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of runtime detection profiles"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "get_profiles"
      },
      "post": {
        "summary": "Create runtime detection profile",
        "description": "Create runtime detection profile or new version of existing profile.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Create runtime detection profile request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contentVersion": {
                    "type": "string"
                  },
                  "settings": {
                    "type": "object"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the runtime detection profile to create. Only include this parameter when creating a new profile."
                  },
                  "profileDescription": {
                    "type": "string",
                    "description": "Description of the new runtime detection profile version."
                  },
                  "profileId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "ID of the profile for which to create a new version. Only include this parameter when creating a new version of an existing profile."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile created successfully"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "post_profiles"
      },
      "delete": {
        "summary": "Delete profiles",
        "description": "Delete profiles with provided IDs.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "profileIds",
            "in": "query",
            "description": "List of runtime detection profile IDs to be deleted",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              },
              "maxItems": 500
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Runtime detection profiles deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "skippedProfiles": {
                      "type": "array",
                      "description": "List of profile IDs not deleted because they're in use. Remove them from the deletion request and try again.",
					  "items": {
							"type": "string"
					  }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "delete_profiles"
      }
    },
    "/profiles/{profileId}": {
      "get": {
        "summary": "Get runtime detection profile details",
        "description": "Get runtime detection profile details.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "profileId",
            "in": "path",
            "description": "Runtime detection profile ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "Profile version",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Runtime detection profile fetched successfully"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "get_profiles_profileId"
      },
      "put": {
        "summary": "Update runtime detection profile name",
        "description": "Update the name of a runtime detection profile.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "profileId",
            "in": "path",
            "description": "Runtime detection profile ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Runtime detection profile name to use",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Runtime detection profile name updated"
          },
          "400": {
            "description": "Invalid request for updating the profile name"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "put_profiles_profileId"
      }
    },
    "/profiles/default-contents": {
      "get": {
        "summary": "List available default contents",
        "description": "List available default contents.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default contents list fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The ID of the default content"
                          },
                          "version": {
                            "type": "string",
                            "description": "Version of the default content"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "get_profiles_default-contents"
      }
    },
    "/cases": {
      "get": {
        "summary": "Search a specific customer's cases",
        "description": "Search a specific customer's cases.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "managedBy",
            "in": "query",
            "description": "Case managed by",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "self",
                "sophos"
              ]
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Case type",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "hunt",
                  "investigation",
                  "incident",
                  "healthCheck",
                  "duplicate",
                  "postureImprovement",
                  "customerRequest",
                  "activeThreat",
                  "exposure",
                  "managedRisk",
                  "generalRequest"
                ]
              }
            }
          },
          {
            "name": "severity",
            "in": "query",
            "description": "Case severity",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "notSet",
                  "critical",
                  "high",
                  "medium",
                  "low",
                  "informational"
                ]
              }
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Case status",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "actionRequired",
                  "resolved",
                  "investigating",
                  "new",
                  "onHold"
                ]
              }
            }
          },
          {
            "name": "assignee",
            "in": "query",
            "description": "Case assignee",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Case name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "overviewContains",
            "in": "query",
            "description": "Text to search for in case overview",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAfter",
            "in": "query",
            "description": "Filter cases created after this date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "createdBefore",
            "in": "query",
            "description": "Filter cases created before this date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "escalated",
            "in": "query",
            "description": "Filter by escalation status",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number to fetch, starting with 1",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page requested",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of cases",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "get_cases"
      },
      "post": {
        "summary": "Create a new case",
        "description": "Create a new case.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Request to create a case",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Case name. Alphanumeric characters, spaces, and specific punctuation allowed.",
                    "maxLength": 510,
                    "pattern": "^[-\\p{L}\\p{N}\\d ,.:().'\"/$#]+$",
                    "required": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Case type",
                    "enum": [
                      "hunt",
                      "investigation",
                      "incident",
                      "healthCheck",
                      "duplicate",
                      "postureImprovement",
                      "customerRequest",
                      "activeThreat",
                      "exposure",
                      "managedRisk"
                    ],
                    "required": true
                  },
                  "managedBy": {
                    "type": "string",
                    "description": "Case managed by",
                    "enum": [
                      "self"
                    ],
                    "default": "self"
                  },
                  "initialDetectionId": {
                    "type": "string",
                    "description": "Initial detection ID for self-managed cases"
                  },
                  "status": {
                    "type": "string",
                    "description": "Case status",
                    "enum": [
                      "new",
                      "investigating"
                    ]
                  }
                },
                "required": [
                  "name",
                  "type"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Case created successfully"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "post_cases"
      }
    },
    "/cases/{caseId}": {
      "get": {
        "summary": "Get a case by ID",
        "description": "Get a case by ID.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "caseId",
            "in": "path",
            "description": "Case ID",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[A-Za-z0-9]+-[A-Za-z0-9]+$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested case",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Case ID"
                    },
                    "type": {
                      "type": "string",
                      "description": "Case type"
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "get_cases_caseId"
      },
      "patch": {
        "summary": "Update a case",
        "description": "Update a case.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "caseId",
            "in": "path",
            "description": "Case ID",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[A-Za-z0-9]+-[A-Za-z0-9]+$"
            }
          }
        ],
        "requestBody": {
          "description": "Request to update a case",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Case name"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Case updated successfully"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "patch_cases_caseId"
      },
      "delete": {
        "summary": "Delete a self-managed case",
        "description": "Delete a self-managed case.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "caseId",
            "in": "path",
            "description": "Case ID",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[A-Za-z0-9]+-[A-Za-z0-9]+$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Case deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "deleted": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "delete_cases_caseId"
      }
    },
    "/cases/{caseId}/detections": {
      "get": {
        "summary": "Get all case detections",
        "description": "Get all case detections.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "caseId",
            "in": "path",
            "description": "Case ID",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[A-Za-z0-9]+-[A-Za-z0-9]+$"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number to fetch, starting with 1",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page requested",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort column",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of case detections"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "get_cases_caseId_detections"
      }
    },
    "/cases/{caseId}/detections/{detectionId}": {
      "get": {
        "summary": "Get a specific detection in a case",
        "description": "Get a specific detection in a case.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "caseId",
            "in": "path",
            "description": "Case ID",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[A-Za-z0-9]+-[A-Za-z0-9]+$"
            }
          },
          {
            "name": "detectionId",
            "in": "path",
            "description": "Detection ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detection details"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "get_cases_caseId_detections_detectionId"
      }
    },
    "/cases/{caseId}/impacted-entities": {
      "get": {
        "summary": "Get impacted entities for a case",
        "description": "Get impacted entities for a case.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "caseId",
            "in": "path",
            "description": "Case ID",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[A-Za-z0-9]+-[A-Za-z0-9]+$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of impacted entities"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "get_cases_caseId_impacted-entities"
      }
    },
    "/cases/{caseId}/mitre-attack-summary": {
      "get": {
        "summary": "Get MITRE ATT&CK summary for a case",
        "description": "Get MITRE ATT&CK summary for a case.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "caseId",
            "in": "path",
            "description": "Case ID",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[A-Za-z0-9]+-[A-Za-z0-9]+$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "MITRE ATT&CK summary"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "get_cases_caseId_mitre-attack-summary"
      }
    },
    "/access-tokens": {
      "get": {
        "summary": "Get all access tokens for a tenant",
        "description": "Get all access tokens for a tenant.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number to fetch, starting with 1",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of the page requested",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "minimum": 1,
              "maximum": 50
            }
          },
          {
            "name": "pageTotal",
            "in": "query",
            "description": "Whether the number of pages should be calculated and returned in the response",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of access tokens",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "get_access-tokens"
      },
      "post": {
        "summary": "Create access token for a tenant",
        "description": "Create access token for a tenant.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Create an access token",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "label": {
                    "type": "string",
                    "description": "Token label. Must be between 0 and 50 characters long and only contain alphanumeric characters, commas, hyphens and periods. Special characters are not allowed.",
                    "pattern": "^[a-zA-Z0-9,\\.-]{0,50}$",
                    "required": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Token type",
                    "example": "sls"
                  },
                  "expiresAt": {
                    "type": "string",
                    "description": "Token expiration date",
                    "format": "date-time",
                    "example": "2021-04-29T15:32:28.482Z"
                  }
                },
                "required": [
                  "label"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token created successfully"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "post_access-tokens"
      }
    },
    "/access-tokens/{tokenId}": {
      "patch": {
        "summary": "Update access token for a tenant",
        "description": "Update access token for a tenant.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "tokenId",
            "in": "path",
            "description": "Token ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Update access token",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "label": {
                    "type": "string",
                    "description": "Token label"
                  },
                  "expiresAt": {
                    "type": "string",
                    "description": "Token expiration date",
                    "format": "date-time",
                    "example": "2021-04-29T15:32:28.482Z"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token updated successfully"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "patch_access-tokens_tokenId"
      },
      "delete": {
        "summary": "Revoke access token for a tenant",
        "description": "Revoke access token for a tenant.",
        "parameters": [
          {
            "name": "X-Tenant-ID",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "tokenId",
            "in": "path",
            "description": "Token ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "deleted": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "delete_access-tokens_tokenId"
      }
    }
  },
  "components": {
    "schemas": {
      "QueryList": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Query"
            }
          },
          "pages": {
            "type": "object",
            "properties": {
              "current": {
                "type": "integer",
                "description": "Current page number."
              },
              "size": {
                "type": "integer",
                "description": "Page size."
              },
              "total": {
                "type": "integer",
                "description": "Total number of pages."
              },
              "items": {
                "type": "integer",
                "description": "Total number of items."
              }
            },
            "required": [
              "current",
              "size"
            ]
          }
        },
        "required": [
          "items",
          "pages"
        ]
      },
      "Query": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Query ID."
          },
          "name": {
            "type": "string",
            "description": "Query name."
          },
          "description": {
            "type": "string",
            "description": "Query description."
          },
          "sql": {
            "type": "string",
            "description": "SQL query text."
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp."
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp."
          }
        },
        "required": [
          "id",
          "name",
          "sql",
          "category",
          "createdAt",
          "updatedAt"
        ]
      },
      "CategoryList": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Category ID."
          },
          "name": {
            "type": "string",
            "description": "Category name."
          },
          "description": {
            "type": "string",
            "description": "Category description."
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "RunList": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Run"
            }
          },
          "pages": {
            "type": "object",
            "properties": {
              "current": {
                "type": "integer",
                "description": "Current page number."
              },
              "size": {
                "type": "integer",
                "description": "Page size."
              },
              "total": {
                "type": "integer",
                "description": "Total number of pages."
              },
              "items": {
                "type": "integer",
                "description": "Total number of items."
              }
            },
            "required": [
              "current",
              "size"
            ]
          }
        },
        "required": [
          "items",
          "pages"
        ]
      },
      "Run": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Run ID."
          },
          "query": {
            "$ref": "#/components/schemas/Query"
          },
          "status": {
            "type": "string",
            "description": "Run status.",
            "enum": [
              "pending",
              "running",
              "completed",
              "failed"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp."
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp."
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Completion timestamp."
          }
        },
        "required": [
          "id",
          "query",
          "status",
          "createdAt",
          "updatedAt"
        ]
      },
      "RunRequest": {
        "type": "object",
        "properties": {
          "queryId": {
            "type": "string",
            "format": "uuid",
            "description": "Query ID."
          },
          "parameters": {
            "type": "object",
            "description": "Query parameters."
          }
        },
        "required": [
          "queryId"
        ]
      },
      "RunResults": {
        "type": "object",
        "properties": {
          "run": {
            "$ref": "#/components/schemas/Run"
          },
          "columns": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Column name."
                },
                "type": {
                  "type": "string",
                  "description": "Column data type."
                }
              },
              "required": [
                "name",
                "type"
              ]
            }
          },
          "rows": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        },
        "required": [
          "run",
          "columns",
          "rows"
        ]
      },
      "MacFilterSettings": {
        "type": "object",
        "properties": {
          "macAddresses": {
            "type": "array",
            "description": "List of MAC addresses.",
            "items": {
              "type": "string"
            }
          },
          "tenant": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "description": "Tenant ID."
              }
            },
            "required": [
              "id"
            ]
          },
          "createdBy": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "description": "Creator ID."
              },
              "type": {
                "type": "string",
                "description": "Creator type."
              },
              "accountId": {
                "type": "string",
                "format": "uuid",
                "description": "Account ID."
              },
              "accountType": {
                "type": "string",
                "description": "Account type."
              }
            },
            "required": [
              "id",
              "type",
              "accountId",
              "accountType"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp."
          }
        },
        "required": [
          "macAddresses",
          "tenant",
          "createdBy",
          "createdAt"
        ]
      },
      "TaskList": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task"
            }
          },
          "pages": {
            "type": "object",
            "properties": {
              "current": {
                "type": "integer",
                "description": "Current page number."
              },
              "size": {
                "type": "integer",
                "description": "Page size."
              },
              "total": {
                "type": "integer",
                "description": "Total number of pages."
              },
              "items": {
                "type": "integer",
                "description": "Total number of items."
              }
            },
            "required": [
              "current",
              "size"
            ]
          }
        },
        "required": [
          "items",
          "pages"
        ]
      },
      "Task": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Task ID."
          },
          "type": {
            "type": "string",
            "description": "Task type."
          },
          "status": {
            "type": "string",
            "description": "Task status.",
            "enum": [
              "pending",
              "in_progress",
              "completed",
              "failed"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp."
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp."
          }
        },
        "required": [
          "id",
          "type",
          "status",
          "createdAt",
          "updatedAt"
        ]
      },
      "WhoAmI": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the caller."
          },
          "idType": {
            "type": "string",
            "description": "The type of the ID of the caller.",
            "enum": [
              "partner",
              "organization",
              "tenant"
            ]
          },
          "apiHosts": {
            "type": "object",
            "description": "API hosts that are available to the caller.",
            "properties": {
              "global": {
                "type": "string",
                "format": "uri",
                "description": "Global API host."
              },
              "dataRegion": {
                "type": "string",
                "format": "uri",
                "description": "Data region specific API host."
              }
            },
            "required": [
              "global",
              "dataRegion"
            ]
          }
        },
        "required": [
          "id",
          "idType",
          "apiHosts"
        ]
      },
      "Attestation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the attestation"
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the user to verify activity for"
          },
          "title": {
            "type": "object",
            "properties": {
              "text": {
                "type": "string",
                "description": "Title text of the attestation"
              },
              "translations": {
                "type": "object",
                "description": "Translations of the title text",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          },
          "question": {
            "type": "object",
            "properties": {
              "text": {
                "type": "string",
                "description": "Question text of the attestation"
              },
              "translations": {
                "type": "object",
                "description": "Translations of the question text",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          },
          "options": {
            "type": "array",
            "description": "Answer options for the attestation",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Unique key for the option"
                },
                "value": {
                  "type": "object",
                  "properties": {
                    "text": {
                      "type": "string",
                      "description": "Text of the option"
                    },
                    "translations": {
                      "type": "object",
                      "description": "Translations of the option text",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "status": {
            "type": "string",
            "description": "Status of the attestation",
            "enum": [
              "pending",
              "answered",
              "expired"
            ]
          },
          "answer": {
            "type": "string",
            "description": "The key of the selected answer option, if the attestation has been answered"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the attestation was created"
          },
          "answeredAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the attestation was answered, if applicable"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the attestation will expire"
          }
        },
        "required": [
          "id",
          "userId",
          "title",
          "question",
          "status",
          "createdAt",
          "expiresAt"
        ]
      },
      "AttestationRequest": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the user to verify activity for"
          },
          "title": {
            "type": "object",
            "properties": {
              "text": {
                "type": "string",
                "description": "Title text of the attestation"
              },
              "translations": {
                "type": "object",
                "description": "Translations of the title text",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "required": [
              "text"
            ]
          },
          "question": {
            "type": "object",
            "properties": {
              "text": {
                "type": "string",
                "description": "Question text of the attestation"
              },
              "translations": {
                "type": "object",
                "description": "Translations of the question text",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "required": [
              "text"
            ]
          },
          "options": {
            "type": "array",
            "description": "Answer options for the attestation",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Unique key for the option"
                },
                "value": {
                  "type": "object",
                  "properties": {
                    "text": {
                      "type": "string",
                      "description": "Text of the option"
                    },
                    "translations": {
                      "type": "object",
                      "description": "Translations of the option text",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "text"
                  ]
                }
              },
              "required": [
                "key",
                "value"
              ]
            }
          },
          "timeout": {
            "type": "integer",
            "description": "Timeout in seconds for the attestation",
            "default": 600
          }
        },
        "required": [
          "userId",
          "title",
          "question"
        ]
      },
      "MacFilteringSettings": {
        "type": "object",
        "properties": {
          "macAddresses": {
            "type": "array",
            "description": "List of MAC addresses.",
            "items": {
              "type": "string",
              "pattern": "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$",
              "example": "5c:85:7e:32:97:26"
            },
            "maxItems": 256,
            "uniqueItems": true
          }
        },
        "required": [
          "macAddresses"
        ]
      },
      "switch_management_api_Task": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the task."
          },
          "type": {
            "type": "string",
            "description": "Type of the task.",
            "example": "switches"
          },
          "status": {
            "type": "string",
            "description": "Status of the task.",
            "enum": [
              "pending",
              "in_progress",
              "completed",
              "failed"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the task was created."
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the task was last updated."
          },
          "details": {
            "type": "object",
            "description": "Additional details about the task."
          }
        },
        "required": [
          "id",
          "type",
          "status",
          "createdAt"
        ]
      },
      "AlertAggregate": {
        "type": "object",
        "description": "Alert aggregate schema",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlertEntity"
            }
          },
          "has_more": {
            "type": "boolean"
          },
          "next_cursor": {
            "type": "string"
          }
        }
      },
      "AlertEntity": {
        "type": "object",
        "description": "Alert entity schema",
        "properties": {
          "id": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "severity": {
            "type": "string",
            "enum": [
              "low",
              "medium",
              "high",
              "critical"
            ]
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "when": {
            "type": "string",
            "format": "date-time"
          },
          "location": {
            "type": "string"
          },
          "threat": {
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "EventAggregate": {
        "type": "object",
        "description": "Event aggregate schema",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LegacyEventEntity"
            }
          },
          "has_more": {
            "type": "boolean"
          },
          "next_cursor": {
            "type": "string"
          }
        }
      },
      "LegacyEventEntity": {
        "type": "object",
        "description": "Legacy event entity schema",
        "properties": {
          "id": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "when": {
            "type": "string",
            "format": "date-time"
          },
          "location": {
            "type": "string"
          },
          "endpoint_type": {
            "type": "string"
          },
          "endpoint_id": {
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "License": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "description": "License type"
          },
          "product": {
            "type": "string",
            "description": "Product name"
          },
          "quantity": {
            "type": "integer",
            "description": "License quantity"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "description": "License start date"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "description": "License end date"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "expired",
              "pending"
            ],
            "description": "License status"
          }
        }
      },
      "FirewallLicense": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "serialNumber": {
            "type": "string",
            "description": "Firewall serial number"
          },
          "model": {
            "type": "string",
            "description": "Firewall model"
          },
          "registrationDate": {
            "type": "string",
            "format": "date-time",
            "description": "Registration date"
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "description": "License expiry date"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "expired",
              "pending"
            ],
            "description": "License status"
          },
          "tenant": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "type": "string"
              }
            },
            "description": "Associated tenant information"
          }
        }
      },
      "FirewallGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "parentGroupId": {
            "type": "string",
            "format": "uuid"
          },
          "firewallCount": {
            "type": "integer"
          },
          "childGroupCount": {
            "type": "integer"
          }
        }
      },
      "FirewallSyncStatus": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "in-sync",
              "out-of-sync",
              "unknown"
            ]
          },
          "lastSyncTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Firewall": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "ipAddress": {
            "type": "string"
          },
          "serialNumber": {
            "type": "string"
          },
          "groupId": {
            "type": "string",
            "format": "uuid"
          },
          "groupName": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "connected",
              "disconnected",
              "unknown"
            ]
          },
          "geoLocation": {
            "type": "object",
            "properties": {
              "latitude": {
                "type": "string"
              },
              "longitude": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "parameters": {},
    "responses": {},
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      },
      "xdr_query_api_bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "wifi_management_api_bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "whoami_api_bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "user_activity_verification_api_bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "switch_management_api_bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "siem_integration_api_bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "partner_api_bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "organization_api_bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "mobile_api_bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "live_discover_api_bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "licensing_api_bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      },
      "firewall_management_api_bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      },
      "endpoint_api_bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "email_management_api_bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      },
      "detections_api_bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      },
      "common_api_bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      },
      "cloud_security_api_bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      },
      "cases_api_bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      },
      "account_management_api_bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}